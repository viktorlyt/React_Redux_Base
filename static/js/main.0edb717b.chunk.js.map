{"version":3,"sources":["redux/type.js","redux/actions.js","likes.js","Title.js","SingleComment.js","comments.js","Spin.js","App.js","redux/likesReducer.js","redux/inputReducer.js","redux/loadReducer.js","redux/commentsReducer.js","redux/rootReducer.js","redux/middleware.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_ON","LOADER_OFF","ERROR_ON","ERROR_OFF","loaderOff","type","errorOn","text","dispatch","setTimeout","connect","state","likes","likesReducer","console","log","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useSelector","inputReducer","useDispatch","onChange","e","payload","inputText","target","value","SingleComment","data","useState","commentText","setCommentText","id","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","style","cursor","hidden","Comments","textComment","setTextComment","comments","commentsReducer","a","fetch","response","json","jsonData","uniqid","commentCreate","length","map","comment","Spin","spinner","loadReducer","loading","visible","App","error","src","alt","initState","rootReducer","combineReducers","action","commentsNew","c","name","itemIndex","findIndex","nextComments","slice","filter","badWords","store","createStore","compose","applyMiddleware","thunk","next","some","w","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0edb717b.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const INPUT_TEXT = 'INPUT_TEXT';\nexport const COMMENT_CREATE = 'COMMENT_CREATE';\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\n\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\nexport const LOADER_ON = 'LOADER_ON';\nexport const LOADER_OFF = 'LOADER_OFF';\nexport const ERROR_ON = 'ERROR_ON';\nexport const ERROR_OFF = 'ERROR_OFF';","import { DECREMENT, INCREMENT, INPUT_TEXT, COMMENT_CREATE, COMMENT_UPDATE, COMMENT_DELETE, COMMENTS_LOAD, LOADER_ON, LOADER_OFF, ERROR_ON, ERROR_OFF } from \"./type\";\n\nexport function incrementLikes() {\n  return {\n    type: INCREMENT,\n  }\n}\n\nexport function decrementLikes() {\n  return {\n    type: DECREMENT,\n  }\n}\n\nexport function inputText(text) {\n  return {\n    type: INPUT_TEXT,\n    payload: text,\n  }\n}\n\nexport function commentCreate(text, id) {\n  return {\n    type: COMMENT_CREATE,\n    payload: { text, id },\n  }\n}\n\nexport function commentUpdate(text, id) {\n  return {\n    type: COMMENT_UPDATE,\n    payload: { text, id },\n  }\n}\n\nexport function commentDelete(id) {\n  return {\n    type: COMMENT_DELETE,\n    id,\n  }\n}\n\nexport function loaderOn() {\n  return {\n    type: LOADER_ON,\n  }\n}\n\nexport function loaderOff() {\n  return {\n    type: LOADER_OFF,\n  }\n}\n\nexport function errorOn(text) {\n  return dispatch => {\n    dispatch({\n      type: ERROR_ON,\n      text,\n    });\n\n    setTimeout(() => {\n      dispatch(errorOff());\n    }, 2000);\n  }\n}\n\nexport function errorOff() {\n  return {\n    type: ERROR_OFF,\n  }\n}\n\nexport function commentsLoad() {\n  return async dispatch => {\n    try {\n      dispatch(loaderOn());\n      const response = await fetch('https://jsonplaceholder.typicode.com/comments?_limit=10');\n      const jsonData = await response.json();\n      setTimeout(() => {\n        dispatch({\n          type: COMMENTS_LOAD,\n          payload: jsonData,\n        });\n      dispatch(loaderOff());\n      }, 2000);\n    } catch (error) {\n      dispatch(errorOn('Error API'));\n      dispatch(loaderOff());\n    }\n  }\n}\n","import { connect } from 'react-redux';\nimport { decrementLikes, incrementLikes } from './redux/actions';\n\nfunction Likes(props) {\n  console.log('render>', props);\n  return (\n    <div className=\"button-controls\">\n      <button onClick={props.onIncrementLikes}>ðŸ–¤ {props.likes}</button>\n      <button onClick={props.onDecrementLikes}>\n        Dislike\n      </button>\n    </div> \n  )\n}\n\nfunction mapStateToProps(state) {\n  const { likesReducer } = state;\n  return {\n    likes: likesReducer.likes,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  console.log('render >', dispatch);\n  return {\n    onIncrementLikes: () => {\n      return dispatch(incrementLikes());\n    },\n    onDecrementLikes: () => {\n      return dispatch(decrementLikes());\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import { useDispatch, useSelector } from \"react-redux\";\nimport { inputText } from \"./redux/actions\";\n\nexport function Title(props) {\n  console.log('props Title> ', props);\n  const text = useSelector(state => {\n    console.log('state>>>>>>', state);\n    const { inputReducer } = state;\n    return inputReducer.text;\n  })\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(inputText(e.target.value));\n  };\n\n  return (\n    <div className='card-title'>\n      <div card-title-top>\n        <input type='text' onChange={handleChange}>\n        </input>\n        <p>{text}</p>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { commentUpdate, commentDelete } from \"./redux/actions\";\n\nexport function SingleComment({ data }) {\n  const [commentText, setCommentText] = useState('');\n  const dispatch = useDispatch();\n  const { text, id } = data;\n\n  useEffect(() => {\n    if (text) {\n      setCommentText(text);\n    }\n  }, [text]);\n\n  const handleInput = (e) => {\n    setCommentText(e.target.value);\n  }\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    dispatch(commentUpdate(commentText, id));\n  }\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(commentDelete(id));\n  }\n\n  return (\n      <form className=\"comments-item\" onSubmit={handleUpdate}>\n        <div onClick={handleDelete} className=\"comment-item-delete\" style={{ cursor: 'pointer' }}>&times; </div>\n        <input type='text' value={commentText} onChange={handleInput}></input>\n        <input type='submit' hidden></input>\n      </form>\n  )\n}\n","import { SingleComment } from \"./SingleComment\";\nimport { useState, useEffect } from \"react\";\nimport uniqid from 'uniqid';\nimport { commentCreate, commentsLoad } from \"./redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport function Comments(props) {\n  const [textComment, setTextComment] = useState('');\n  const dispatch = useDispatch();\n  const comments = useSelector(state => {\n    const { commentsReducer } = state;\n    return commentsReducer.comments;\n  });\n\n  const handleInput = (e) => {\n    console.log('input>>>>> ', e.target.value);\n    setTextComment(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uniqid();\n    dispatch(commentCreate(textComment, id));\n  }\n\n  useEffect(() => {\n    dispatch(commentsLoad());\n  }, []);\n\n  return (\n    <div className=\"card-comments\">\n      <form onSubmit={handleSubmit} className=\"comments-item-create\">\n        <input type='text' value={textComment} onChange={handleInput}></input>\n        <input type='submit' hidden></input>\n      </form>\n      {comments.length && comments.map(comment => (\n      <SingleComment key={comment.id} data={comment}/>\n      ))}\n    </div>\n  )\n}\n","import Loader from \"react-loader-spinner\";\nimport { useSelector } from \"react-redux\";\n\nexport const Spin = (props) => {\n  const spinner = useSelector(state => state.loadReducer.loading);\n  console.log('spinner', spinner);\n\n  return (\n    <div className=\"loader-styles\">\n      <Loader visible={spinner}/>\n    </div>\n  )\n}\n","import './App.css';\nimport { useSelector } from \"react-redux\";\nimport Likes from './likes';\nimport { Title } from './Title';\nimport { Comments } from './comments';\nimport { Spin } from './Spin'\n\nfunction App() {\n  const error = useSelector(state => state.loadReducer.error);\n  console.log('error>>>>>', error);\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && (\n            <div className='error-message'>\n              {error}\n            </div>\n          )}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\"/>\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { DECREMENT, INCREMENT } from \"./type\";\n\nconst initState = {\n  likes: 0,\n}\n\nexport const likesReducer = (state = initState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        likes: state.likes + 1,\n      }\n    \n    case DECREMENT:\n      return {\n        ...state,\n        likes: state.likes - 1,\n      }\n  \n    default:\n      return state;\n  }\n}\n","import { INPUT_TEXT } from \"./type\";\n\nconst initState = {\n  text: '',\n}\n\nexport const inputReducer = (state = initState, action) => {\n  console.log('inputReducer >', action);\n\n  switch (action.type) {\n    case INPUT_TEXT:\n      return {\n        ...state,\n        text: action.payload,\n      }\n  \n    default:\n      return state;\n  }\n}\n","import { LOADER_ON, LOADER_OFF, ERROR_ON, ERROR_OFF } from \"./type\";\n\nconst initState = {\n  loading: false,\n  error: null,\n}\n\nexport const loadReducer = (state = initState, action) => {\n  console.log('loadReducer >', action);\n\n  switch (action.type) {\n    case LOADER_ON:\n      return {\n        ...state,\n        loading: true,\n      }\n    \n    case LOADER_OFF:\n      return {\n        ...state,\n        loading: false,\n      }\n   \n    case ERROR_ON:\n      return {\n        ...state,\n        error: action.text,\n      }\n    \n    case ERROR_OFF:\n      return {\n        ...state,\n        error: null,\n      }\n  \n    default:\n      return state;\n  }\n}\n","import { COMMENT_CREATE, COMMENT_UPDATE, COMMENT_DELETE, COMMENTS_LOAD } from \"./type\";\n\nconst initState = {\n  comments: [],\n}\n\nexport const commentsReducer = (state = initState, action) => {\n  console.log('comm red ', action);\n  switch (action.type) {\n    case COMMENT_CREATE:\n      return {\n        ...state,\n        comments: [...state.comments, action.payload],\n      }\n    \n    case COMMENTS_LOAD:\n      const commentsNew = action.payload.map(c => {\n        return {\n          text: c.name,\n          id: c.id,\n        }\n      })\n      return {\n        ...state,\n        comments: commentsNew,\n      }\n    \n    case COMMENT_UPDATE:\n      const { payload } = action;\n      const { comments } = state;\n      const itemIndex = comments.findIndex(comment => comment.id === payload.id);\n\n      const nextComments = [\n        ...comments.slice(0, itemIndex),\n        payload,\n        ...comments.slice(itemIndex + 1),\n      ];\n\n      return {\n        ...state,\n        comments: nextComments,\n      }\n\n    case COMMENT_DELETE:\n      const { id } = action;\n\n      return {\n        ...state,\n        comments: [...state.comments.filter(c => c.id !== id)],\n      }\n  \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { likesReducer } from \"./likesReducer\";\nimport { inputReducer } from \"./inputReducer\";\nimport { loadReducer } from \"./loadReducer\";\nimport { commentsReducer } from \"./commentsReducer\";\n\nexport const rootReducer = combineReducers({\n  likesReducer,\n  inputReducer,\n  commentsReducer,\n  loadReducer,\n});\n","import { errorOn } from \"./actions\";\nimport { COMMENT_CREATE } from \"./type\"\n\nconst badWords = ['stupid', 'fool'];\n\nexport function spamFilter(store) {\n  return function(next) {\n    return function(action) {\n      if (action.type === COMMENT_CREATE) {\n        const hasBadWords = badWords.some(w => action.payload.text.includes(w));\n\n        if (hasBadWords) {\n          return store.dispatch(errorOn('Be respectfull'));\n        }\n      }\n\n      return next(action);\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux/es/exports';\nimport { rootReducer } from './redux/rootReducer';\nimport { spamFilter } from './redux/middleware';\n\nexport const store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter,\n  )\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}